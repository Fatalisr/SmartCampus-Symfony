{% extends 'base_referent.html.twig' %}

{% block body %}
    <link rel="stylesheet" href="{{ asset('detail_SA.css') }}">
    <script src="https://d3js.org/d3.v4.js"></script>
    <script src="{{ asset('graph.js') }}"></script>
    <div class="fse">
        <p> {{ nom }}</p>
        <p>{{ salle }}</p>
        {% if etat == 'A_INSTALLER' %}
            <p>ðŸŸ  A Installer</p>
        {% elseif etat == 'ACTIF' %}
            <p>ðŸŸ¢ Actif</p>
        {% elseif etat == 'MAINTENANCE' %}
            <p>ðŸ”´ Maintenance</p>
        {% endif %}
        <p><a href="{{ path("app_referent") }}">Retour</a></p>
    </div>
    {% if etat == 'ACTIF' %}
        <section id="mainsection">
            <aside>
                <div class="pSAr">
                    {{ form_start(form) }}
                    <div id="form_header">
                        <h1>Demande de Maintenance</h1>
                    </div>
                    <div class="form_line">
                        {{ form_widget(form.message) }}
                    </div>
                    <div id="submit_btn">
                        <button type="submit" onclick="return confirm('Voulez-vous dÃ©marrer une maintenance pour le SA {{ nom }}?')">Envoyer</button>
                    </div>

                    {{ form_end(form) }}
                </div>
                <div class="pSAr">
                    Encore des donnÃ©es.
                </div>
            </aside>
            <section id="left">
                <div class="pSAl" id="pSal">
                    <div id="graph"></div>
                </div>
            </section>
        </section>
    {% else %}
        <section id="mainsection">
            <div class="centre">
                <img src="{{ asset('images/noWifi.png') }}" alt="no data">
                <p>Aucun donnÃ©e disponible</p>
            </div>
        </section>
    {% endif %}
    <script>

        // set the dimensions and margins of the graph
        var margin = {top: 10, right: 30, bottom: 30, left: 60},
            width = 460 - margin.left - margin.right,
            height = 400 - margin.top - margin.bottom;

        // append the svg object to the body of the page
        var svg = d3.select("#graph")
            .append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");

        //Read the data
        /*d3.json("{{ asset("data/data_example.json") }}",*/

        function traitementDonnee() {
            console.log(jsondata);
            d_array =  [];
            for (let i = 0; i < jsondata.length; i++)
            {
                d_array.push({ dateCapture : d3.timeParse("%Y-%m-%d %H:%M:%S")(jsondata[i].dateCapture), valeur : jsondata[i].valeur });
            }
            console.log(d_array)
            // Add X axis --> it is a date format
            x = d3.scaleTime()
                //d3.extent(d_array, function(d) { console.log(d); d.dateCapture; })
                .domain([d3.min(d_array, function(d) { return +d.dateCapture; }),d3.max(d_array, function(d) { return +d.dateCapture; })])
                .range([ 0, 1500 ]);
            svg.append("g")
                .attr("transform", "translate(0," + height + ")")
                .call(d3.axisBottom(x));

            // Add Y axis
            y = d3.scaleLinear()
                .domain([0,25])
                .range([ height, 0 ]);
            svg.append("g")
                .call(d3.axisLeft(y));

            // Add the line
            svg.append("path")
                .datum(d_array)
                .attr("fill", "none")
                .attr("stroke", "steelblue")
                .attr("stroke-width", 1.5)
                .attr("d", d3.line()
                    .x(function(d) { return x(d.dateCapture) })
                    .y(function(d) { return y(d.valeur) })
                )
        }

        d3.json("{{ asset("data/data_example.json") }}", function(datafromserver) {
            jsondata = datafromserver;
            traitementDonnee();
        });

    </script>
{% endblock %}